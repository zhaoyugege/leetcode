题目：
https://leetcode-cn.com/problems/longest-increasing-subsequence/


# 只能用在连续上升
class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
     	dp = [1 for _ in range(len(nums))]
		if not nums:
			return 0
		for i in range(1,len(nums)):
			if nums[i] > nums[i-1]:
				dp[i] = dp[i-1]+1
		return max(dp)

#正解
class Solution:
    def lengthOfLIS(self, nums: List[int]) -> int:
		dp = [1 for _ in range(len(nums))]
		if not nums:
			return 0
		for i in range(1,len(nums)):
			for j in range(i):
				if nums[i]>nums[j]:
					dp[i] = max(dp[i],dp[j]+1)
		return max(dp)
				
