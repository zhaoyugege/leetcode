题目：
https://leetcode-cn.com/problems/construct-binary-tree-from-preorder-and-inorder-traversal/


前序遍历 preorder = [3,9,20,15,7]
中序遍历 inorder = [9,3,15,20,7]


# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def buildTree(self, preorder: List[int], inorder: List[int]) -> TreeNode:
        if not preorder or not inorder:
            return None
        root = TreeNode(preorder[0])
        index = inorder.index(root.val)
        order_left = self.buildTree(preorder[1:index+1],inorder[:index])
        order_right = self.buildTree(preorder[index+1:],inorder[index+1:])
        root.left = order_left
        root.right = order_right
        return root
        

